package br.com.iterativejr.data.dao.converter;import javax.enterprise.context.RequestScoped;import javax.faces.application.FacesMessage;import javax.faces.component.UIComponent;import javax.faces.context.FacesContext;import javax.faces.convert.Converter;import javax.faces.convert.ConverterException;import javax.inject.Inject;import javax.inject.Named;import br.com.iterativejr.data.dao.impl.PessoaDAO;import br.com.iterativejr.domain.entidade.Pessoa;import br.com.iterativejr.domain.exception.SisapException;@Named@RequestScopedpublic class PessoaConverter implements Converter {	@Inject	private PessoaDAO pessoas;	public Object getAsObject(FacesContext context, UIComponent component,			String valor) {		if (valor == null || valor.trim().isEmpty()) {			return null;		}		String matricula = String.valueOf(valor);		try {			return pessoas.buscarPorMatricula(matricula);		} catch (SisapException e) {			String msgErroStr = String					.format("Erro de conversao! Nao foi possivel realizar a conversao da string '%s' para o tipo esperado.",							valor);			FacesMessage msgErro = new FacesMessage(					FacesMessage.SEVERITY_ERROR, msgErroStr, msgErroStr);			throw new ConverterException(msgErro);		}	}	public String getAsString(FacesContext context, UIComponent component,			Object valor) {		if (valor == null) {			return null;		}		String cpfPessoa = ((Pessoa) valor).getCpf();		return (cpfPessoa != null) ? cpfPessoa.toString() : null;	}}